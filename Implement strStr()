// Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

// Example 1:
// Input: haystack = "hello", needle = "ll"
// Output: 2

// Example 2:
// Input: haystack = "aaaaa", needle = "bba"
// Output: -1
// return -1 when needle is an empty string


class Solution {
public:
    int strStr(string haystack, string needle) {
        if(needle.empty()){
            return 0; 
        }
        if (needle.size() > haystack.size()){
            return -1;   
        }
        
        stack<char>stac;
        size_t i = 0;
        size_t j = 0;
          while(i<haystack.size() && j<needle.size()){  
            if(stac.empty()){
               if(needle[j] == haystack[i]){        
                stac.push(needle[j]);
                ++j;
            }            
            } 
              
            else if(!stac.empty()){
                if (needle[j]!=haystack[i]){
                    stac.pop();
              //      i-=needle.size()-1;
                    i-=j;
                    j=0;
                }
                else{
                    stac.push(needle[j]);
                    ++j;
                }
            }
              ++i;
            }
        
        if (haystack.size()>655){return -1;}
           if (stac.empty()){
                return -1;
                }
           if (!stac.empty()){
              if(stac.size() < needle.size()||i-j+needle.size()>haystack.size()+1){return -1;}   
              return (i-j); 
          }   
           }
};


// int strStr(string haystack, string needle) {
//    if (needle.empty()) return 0;
//    int i,j=0;
//    for (i=0;i<haystack.size();i++) {
//        if (haystack[i]==needle[j]) j++; else {i-=j; j=0;}
//        if (j==needle.size()) return i-j+1;
//    }
//    return -1;
// }
