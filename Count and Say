//count the same number's quantity and return the iteration result based on each roll;
// Given an integer n, generate the nth term of the count-and-say sequence.

// Note: Each term of the sequence of integers will be represented as a string.

// Example 1:
// Input: 1
// Output: "1"

// Example 2:
// Input: 4
// Output: "1211"

class Solution {
public:
    std::string countAndSay(int n) {
        if (n == 1){return "1";}
       std::string output_temp = std::to_string(1);
        for(int i=1;i<n;++i){      //just repeat the loop for n times, no matter whether there is any i in the function;
            output_temp = iterate(output_temp);  
        }
        return output_temp;
    }
            
    std::string iterate(std::string s){
            int count = 1;
       std::string s_temp = "";
            for(int j = 0; j<s.length(); ++j){
                while(s[j]==s[j+1]){
                    ++count;
                    ++j;
                }
                s_temp += std::to_string(count) + s[j];
                count = 1;
            } 
            return s_temp;
        }
            
        };
